* Ideas
** Make a map of computed things and index into it
* To Implement
** DONE Create a type for each tower 
   CLOSED: [2018-07-18 Wed 22:01]
   :LOGBOOK:
   - CLOSING NOTE [2018-07-18 Wed 22:01] \\
     It hardly touched the benchmark which is really wierd...
   - State "IN_PROGRESS" from "TODO"       [2018-07-17 Tue 20:38]
   :END:
** DONE Use an Int for Coords in Moves
   CLOSED: [2018-07-19 Thu 07:21]
   :LOGBOOK:
   - CLOSING NOTE [2018-07-19 Thu 07:21] \\
     It made just about no difference, but it'll make generation a bit
     faster...
   :END:
** DONE Generate all moves upfront then filter
   CLOSED: [2018-07-21 Sat 15:09]
   :LOGBOOK:
   - CLOSING NOTE [2018-07-21 Sat 15:09] \\
     Made the adjustment but it looks like it's worse and I think that it's
     because I zip it and reallocate on each evaluation of fitness.
   - State "IN_PROGRESS" from "TODO"       [2018-07-19 Thu 07:21]
   :END:
** IN_PROGRESS Separate the fitness vector from the move vector
   :LOGBOOK:
   - State "IN_PROGRESS" from "TODO"       [2018-07-21 Sat 15:41]
   :END:
** TODO Find the function which is creating Integers
   :LOGBOOK:
   - Note taken on [2018-07-21 Sat 15:41] \\
     I'm really not sure.  So I'm moving onto something else while I leave
     my brain to figure it all out.
   - State "IN_PROGRESS" from "TODO"       [2018-07-21 Sat 15:24]
   :END:
** TODO Use an Int for a missile
** TODO Use an Int for Each Move
** TODO Cache Fitnesses when searching deeper
** TODO Use Vector Algorithms binary search for `chooseOne'
** TODO Add rewrite rules and always use map* varients of functions
** TODO Make a type for each row state
** TODO Do some maths!!!
** TODO Check for collision with the player when there are no towers on the row
